---
resource_types:
  - name: s3-iam
    type: docker-image
    check_every: 24h
    source:
      repository: governmentpaas/s3-resource
      tag: fda60bf4c5f85e96c16f704e128e5ead9e84d30d

  - name: slack-notification-resource
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

resources:
  - name: paas-codimd
    type: git
    check_every: 1m
    source:
      uri: https://github.com/alphagov/paas-codimd
      branch: gds_master

  - name: hackmd-secrets
    type: s3-iam
    check_every: 24h
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: hackmd-secrets.yml

  - name: slack-notification
    type: slack-notification-resource
    source:
      url: ((slack_webhook_url))

jobs:
  - name: deploy
    serial: true
    plan:
      - get: paas-codimd
        trigger: true
      - get: hackmd-secrets

      - task: build
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: node
              tag: 10
          inputs:
          - name: paas-codimd
          outputs:
          - name: paas-codimd
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                cd paas-codimd

                echo "Installing application dependencies..."
                npm install

                echo "Building application assets..."
                npm run build

      - task: push
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/cf-cli
              tag: latest
          inputs:
            - name: paas-codimd
            - name: hackmd-secrets
          params:
            CF_API: https://api.((cf_system_domain))
            CF_USER: ((cf_user))
            CF_PASSWORD: ((cf_password))
            CF_APPS_DOMAIN: ((cf_apps_domain))
            CF_SYSTEM_DOMAIN: ((cf_system_domain))
            CF_ORG: govuk-paas
            CF_SPACE: tools
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                echo "Logging on to CloudFoundry..."
                cf login \
                  -a "${CF_API}" \
                  -u "${CF_USER}" \
                  -p "${CF_PASSWORD}" \
                  -o "${CF_ORG}" \
                  -s "${CF_SPACE}"

                cf create-service postgres tiny-unencrypted-9.5 hackmd-db
                while ! cf service hackmd-db | grep -q 'create succeeded'; do
                  echo "Waiting for creation of service to complete..."
                  sleep 30
                done
                cf bind-service hackmd hackmd-db

                cf create-service aws-s3-bucket default hackmd-store -c '{"public_bucket":true}'
                while ! cf service hackmd-store | grep -q 'create succeeded'; do
                  echo "Waiting for creation of service to complete..."
                  sleep 5
                done
                cf bind-service hackmd hackmd-store -c '{"permissions": "read-write"}'

                echo "Generating manifest variables"
                cat <<EOF | tee paas-codimd/vars.yml
                ---
                domain: ${CF_APPS_DOMAIN}
                github_client_id: $(grep hackmd_client_id hackmd-secrets/hackmd-secrets.yml | awk '{print $2}')
                github_client_secret: $(grep hackmd_client_secret hackmd-secrets/hackmd-secrets.yml | awk '{print $2}')
                secret: $(grep hackmd_session_secret hackmd-secrets/hackmd-secrets.yml | awk '{print $2}')
                EOF

                cd paas-codimd
                cf push hackmd --vars-file vars.yml
        on_failure:
          put: slack-notification
          params:
            text: "Job $BUILD_NAME in $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME failed. Check the logs at $ATC_EXTERNAL_URL/builds/$BUILD_ID."
